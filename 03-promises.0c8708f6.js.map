{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAE/BC,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,IAAIC,EAAQL,SAASC,cAAc,uBAAuBK,cAC1D,MAAMC,EAAOP,SAASC,cAAc,sBAAsBK,cACpDE,EAASR,SAASC,cAAc,wBAAwBK,cAE9D,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BC,EAAcD,EAAGJ,GACdM,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBC,EAAAhB,GAASiB,OAAOC,QACd,uBAAqBJ,QAAiBC,MAAU,IAGnDI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBC,EAAAhB,GAASiB,OAAOG,QACd,sBAAoBN,QAAeC,MAAU,IAGnDR,GAASE,EAGX,SAASG,EAAcE,EAAUC,GAC/B,MAAMM,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEX,E,MAAUC,IAEpBW,EAAO,C,SAAEZ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbV,EAAMuB,cAAcC,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let delay = document.querySelector('input[name=\"delay\"]').valueAsNumber;\n  const step = document.querySelector('input[name=\"step\"]').valueAsNumber;\n  const amount = document.querySelector('input[name=\"amount\"]').valueAsNumber;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  event.currentTarget.reset();\n});\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay1","valueAsNumber","step","amount","i","createPromise","then","position","delay","$parcel$interopDefault","Notify","success","catch","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","currentTarget","reset"],"version":3,"file":"03-promises.0c8708f6.js.map"}